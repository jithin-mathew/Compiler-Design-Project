Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expr
Rule 1     expr -> expr PLUS expr
Rule 2     expr -> expr MINUS expr
Rule 3     expr -> MINUS expr
Rule 4     expr -> expr TIMES expr
Rule 5     expr -> expr DIVIDE expr
Rule 6     expr -> expr MODULO expr
Rule 7     expr -> expr OR expr
Rule 8     expr -> expr AND expr
Rule 9     expr -> NOT expr
Rule 10    expr -> expr XOR expr
Rule 11    expr -> expr RSHIFT expr
Rule 12    expr -> expr LSHIFT expr
Rule 13    expr -> expr LOR expr
Rule 14    expr -> expr LAND expr
Rule 15    expr -> LNOT expr
Rule 16    expr -> INCREMENT expr
Rule 17    expr -> DECREMENT expr
Rule 18    expr -> NUMBER
Rule 19    expr -> LPAREN expr RPAREN

Terminals, with rules where they appear

AND                  : 8
DECREMENT            : 17
DIVIDE               : 5
INCREMENT            : 16
LAND                 : 14
LNOT                 : 15
LOR                  : 13
LPAREN               : 19
LSHIFT               : 12
MINUS                : 2 3
MODULO               : 6
NOT                  : 9
NUMBER               : 18
OR                   : 7
PLUS                 : 1
RPAREN               : 19
RSHIFT               : 11
TIMES                : 4
XOR                  : 10
error                : 

Nonterminals, with rules where they appear

expr                 : 1 1 2 2 3 4 4 5 5 6 6 7 7 8 8 9 10 10 11 11 12 12 13 13 14 14 15 16 17 19 0

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 1

state 1

    (0) S' -> expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20


state 2

    (3) expr -> MINUS . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 21

state 3

    (9) expr -> NOT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 22

state 4

    (15) expr -> LNOT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 23

state 5

    (16) expr -> INCREMENT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 24

state 6

    (17) expr -> DECREMENT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 25

state 7

    (18) expr -> NUMBER .

    PLUS            reduce using rule 18 (expr -> NUMBER .)
    MINUS           reduce using rule 18 (expr -> NUMBER .)
    TIMES           reduce using rule 18 (expr -> NUMBER .)
    DIVIDE          reduce using rule 18 (expr -> NUMBER .)
    MODULO          reduce using rule 18 (expr -> NUMBER .)
    OR              reduce using rule 18 (expr -> NUMBER .)
    AND             reduce using rule 18 (expr -> NUMBER .)
    XOR             reduce using rule 18 (expr -> NUMBER .)
    RSHIFT          reduce using rule 18 (expr -> NUMBER .)
    LSHIFT          reduce using rule 18 (expr -> NUMBER .)
    LOR             reduce using rule 18 (expr -> NUMBER .)
    LAND            reduce using rule 18 (expr -> NUMBER .)
    $end            reduce using rule 18 (expr -> NUMBER .)
    RPAREN          reduce using rule 18 (expr -> NUMBER .)


state 8

    (19) expr -> LPAREN . expr RPAREN
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 26

state 9

    (1) expr -> expr PLUS . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 27

state 10

    (2) expr -> expr MINUS . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 28

state 11

    (4) expr -> expr TIMES . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 29

state 12

    (5) expr -> expr DIVIDE . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 30

state 13

    (6) expr -> expr MODULO . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 31

state 14

    (7) expr -> expr OR . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 32

state 15

    (8) expr -> expr AND . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 33

state 16

    (10) expr -> expr XOR . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 34

state 17

    (11) expr -> expr RSHIFT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 35

state 18

    (12) expr -> expr LSHIFT . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 36

state 19

    (13) expr -> expr LOR . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 37

state 20

    (14) expr -> expr LAND . expr
    (1) expr -> . expr PLUS expr
    (2) expr -> . expr MINUS expr
    (3) expr -> . MINUS expr
    (4) expr -> . expr TIMES expr
    (5) expr -> . expr DIVIDE expr
    (6) expr -> . expr MODULO expr
    (7) expr -> . expr OR expr
    (8) expr -> . expr AND expr
    (9) expr -> . NOT expr
    (10) expr -> . expr XOR expr
    (11) expr -> . expr RSHIFT expr
    (12) expr -> . expr LSHIFT expr
    (13) expr -> . expr LOR expr
    (14) expr -> . expr LAND expr
    (15) expr -> . LNOT expr
    (16) expr -> . INCREMENT expr
    (17) expr -> . DECREMENT expr
    (18) expr -> . NUMBER
    (19) expr -> . LPAREN expr RPAREN

    MINUS           shift and go to state 2
    NOT             shift and go to state 3
    LNOT            shift and go to state 4
    INCREMENT       shift and go to state 5
    DECREMENT       shift and go to state 6
    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 8

    expr                           shift and go to state 38

state 21

    (3) expr -> MINUS expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            reduce using rule 3 (expr -> MINUS expr .)
    MINUS           reduce using rule 3 (expr -> MINUS expr .)
    TIMES           reduce using rule 3 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 3 (expr -> MINUS expr .)
    MODULO          reduce using rule 3 (expr -> MINUS expr .)
    OR              reduce using rule 3 (expr -> MINUS expr .)
    AND             reduce using rule 3 (expr -> MINUS expr .)
    XOR             reduce using rule 3 (expr -> MINUS expr .)
    RSHIFT          reduce using rule 3 (expr -> MINUS expr .)
    LSHIFT          reduce using rule 3 (expr -> MINUS expr .)
    LOR             reduce using rule 3 (expr -> MINUS expr .)
    LAND            reduce using rule 3 (expr -> MINUS expr .)
    $end            reduce using rule 3 (expr -> MINUS expr .)
    RPAREN          reduce using rule 3 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! MODULO          [ shift and go to state 13 ]
  ! OR              [ shift and go to state 14 ]
  ! AND             [ shift and go to state 15 ]
  ! XOR             [ shift and go to state 16 ]
  ! RSHIFT          [ shift and go to state 17 ]
  ! LSHIFT          [ shift and go to state 18 ]
  ! LOR             [ shift and go to state 19 ]
  ! LAND            [ shift and go to state 20 ]


state 22

    (9) expr -> NOT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 9 (expr -> NOT expr .)
    RPAREN          reduce using rule 9 (expr -> NOT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 9 (expr -> NOT expr .) ]
  ! MINUS           [ reduce using rule 9 (expr -> NOT expr .) ]
  ! TIMES           [ reduce using rule 9 (expr -> NOT expr .) ]
  ! DIVIDE          [ reduce using rule 9 (expr -> NOT expr .) ]
  ! MODULO          [ reduce using rule 9 (expr -> NOT expr .) ]
  ! OR              [ reduce using rule 9 (expr -> NOT expr .) ]
  ! AND             [ reduce using rule 9 (expr -> NOT expr .) ]
  ! XOR             [ reduce using rule 9 (expr -> NOT expr .) ]
  ! RSHIFT          [ reduce using rule 9 (expr -> NOT expr .) ]
  ! LSHIFT          [ reduce using rule 9 (expr -> NOT expr .) ]
  ! LOR             [ reduce using rule 9 (expr -> NOT expr .) ]
  ! LAND            [ reduce using rule 9 (expr -> NOT expr .) ]


state 23

    (15) expr -> LNOT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 15 (expr -> LNOT expr .)
    RPAREN          reduce using rule 15 (expr -> LNOT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! MINUS           [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! TIMES           [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! DIVIDE          [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! MODULO          [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! OR              [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! AND             [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! XOR             [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! RSHIFT          [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! LSHIFT          [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! LOR             [ reduce using rule 15 (expr -> LNOT expr .) ]
  ! LAND            [ reduce using rule 15 (expr -> LNOT expr .) ]


state 24

    (16) expr -> INCREMENT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 16 (expr -> INCREMENT expr .)
    RPAREN          reduce using rule 16 (expr -> INCREMENT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! MINUS           [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! TIMES           [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! MODULO          [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! OR              [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! AND             [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! XOR             [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! RSHIFT          [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! LSHIFT          [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! LOR             [ reduce using rule 16 (expr -> INCREMENT expr .) ]
  ! LAND            [ reduce using rule 16 (expr -> INCREMENT expr .) ]


state 25

    (17) expr -> DECREMENT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 17 (expr -> DECREMENT expr .)
    RPAREN          reduce using rule 17 (expr -> DECREMENT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! MINUS           [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! TIMES           [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! MODULO          [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! OR              [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! AND             [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! XOR             [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! RSHIFT          [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! LSHIFT          [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! LOR             [ reduce using rule 17 (expr -> DECREMENT expr .) ]
  ! LAND            [ reduce using rule 17 (expr -> DECREMENT expr .) ]


state 26

    (19) expr -> LPAREN expr . RPAREN
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20


state 27

    (1) expr -> expr PLUS expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            reduce using rule 1 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 1 (expr -> expr PLUS expr .)
    MODULO          reduce using rule 1 (expr -> expr PLUS expr .)
    OR              reduce using rule 1 (expr -> expr PLUS expr .)
    AND             reduce using rule 1 (expr -> expr PLUS expr .)
    XOR             reduce using rule 1 (expr -> expr PLUS expr .)
    RSHIFT          reduce using rule 1 (expr -> expr PLUS expr .)
    LSHIFT          reduce using rule 1 (expr -> expr PLUS expr .)
    LOR             reduce using rule 1 (expr -> expr PLUS expr .)
    LAND            reduce using rule 1 (expr -> expr PLUS expr .)
    $end            reduce using rule 1 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 1 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! TIMES           [ reduce using rule 1 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 1 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! MODULO          [ shift and go to state 13 ]
  ! OR              [ shift and go to state 14 ]
  ! AND             [ shift and go to state 15 ]
  ! XOR             [ shift and go to state 16 ]
  ! RSHIFT          [ shift and go to state 17 ]
  ! LSHIFT          [ shift and go to state 18 ]
  ! LOR             [ shift and go to state 19 ]
  ! LAND            [ shift and go to state 20 ]


state 28

    (2) expr -> expr MINUS expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            reduce using rule 2 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 2 (expr -> expr MINUS expr .)
    MODULO          reduce using rule 2 (expr -> expr MINUS expr .)
    OR              reduce using rule 2 (expr -> expr MINUS expr .)
    AND             reduce using rule 2 (expr -> expr MINUS expr .)
    XOR             reduce using rule 2 (expr -> expr MINUS expr .)
    RSHIFT          reduce using rule 2 (expr -> expr MINUS expr .)
    LSHIFT          reduce using rule 2 (expr -> expr MINUS expr .)
    LOR             reduce using rule 2 (expr -> expr MINUS expr .)
    LAND            reduce using rule 2 (expr -> expr MINUS expr .)
    $end            reduce using rule 2 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 2 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! TIMES           [ reduce using rule 2 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 2 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! MODULO          [ shift and go to state 13 ]
  ! OR              [ shift and go to state 14 ]
  ! AND             [ shift and go to state 15 ]
  ! XOR             [ shift and go to state 16 ]
  ! RSHIFT          [ shift and go to state 17 ]
  ! LSHIFT          [ shift and go to state 18 ]
  ! LOR             [ shift and go to state 19 ]
  ! LAND            [ shift and go to state 20 ]


state 29

    (4) expr -> expr TIMES expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            reduce using rule 4 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 4 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 4 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 4 (expr -> expr TIMES expr .)
    MODULO          reduce using rule 4 (expr -> expr TIMES expr .)
    OR              reduce using rule 4 (expr -> expr TIMES expr .)
    AND             reduce using rule 4 (expr -> expr TIMES expr .)
    XOR             reduce using rule 4 (expr -> expr TIMES expr .)
    RSHIFT          reduce using rule 4 (expr -> expr TIMES expr .)
    LSHIFT          reduce using rule 4 (expr -> expr TIMES expr .)
    LOR             reduce using rule 4 (expr -> expr TIMES expr .)
    LAND            reduce using rule 4 (expr -> expr TIMES expr .)
    $end            reduce using rule 4 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 4 (expr -> expr TIMES expr .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! MODULO          [ shift and go to state 13 ]
  ! OR              [ shift and go to state 14 ]
  ! AND             [ shift and go to state 15 ]
  ! XOR             [ shift and go to state 16 ]
  ! RSHIFT          [ shift and go to state 17 ]
  ! LSHIFT          [ shift and go to state 18 ]
  ! LOR             [ shift and go to state 19 ]
  ! LAND            [ shift and go to state 20 ]


state 30

    (5) expr -> expr DIVIDE expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

    PLUS            reduce using rule 5 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 5 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 5 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 5 (expr -> expr DIVIDE expr .)
    MODULO          reduce using rule 5 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 5 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 5 (expr -> expr DIVIDE expr .)
    XOR             reduce using rule 5 (expr -> expr DIVIDE expr .)
    RSHIFT          reduce using rule 5 (expr -> expr DIVIDE expr .)
    LSHIFT          reduce using rule 5 (expr -> expr DIVIDE expr .)
    LOR             reduce using rule 5 (expr -> expr DIVIDE expr .)
    LAND            reduce using rule 5 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 5 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 5 (expr -> expr DIVIDE expr .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! MODULO          [ shift and go to state 13 ]
  ! OR              [ shift and go to state 14 ]
  ! AND             [ shift and go to state 15 ]
  ! XOR             [ shift and go to state 16 ]
  ! RSHIFT          [ shift and go to state 17 ]
  ! LSHIFT          [ shift and go to state 18 ]
  ! LOR             [ shift and go to state 19 ]
  ! LAND            [ shift and go to state 20 ]


state 31

    (6) expr -> expr MODULO expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 6 (expr -> expr MODULO expr .)
    RPAREN          reduce using rule 6 (expr -> expr MODULO expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! MINUS           [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! TIMES           [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! DIVIDE          [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! MODULO          [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! OR              [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! AND             [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! XOR             [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! RSHIFT          [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! LSHIFT          [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! LOR             [ reduce using rule 6 (expr -> expr MODULO expr .) ]
  ! LAND            [ reduce using rule 6 (expr -> expr MODULO expr .) ]


state 32

    (7) expr -> expr OR expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 7 (expr -> expr OR expr .)
    RPAREN          reduce using rule 7 (expr -> expr OR expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! DIVIDE          [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! MODULO          [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! AND             [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! XOR             [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! RSHIFT          [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! LSHIFT          [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! LOR             [ reduce using rule 7 (expr -> expr OR expr .) ]
  ! LAND            [ reduce using rule 7 (expr -> expr OR expr .) ]


state 33

    (8) expr -> expr AND expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 8 (expr -> expr AND expr .)
    RPAREN          reduce using rule 8 (expr -> expr AND expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! DIVIDE          [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! MODULO          [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! OR              [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! AND             [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! XOR             [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! RSHIFT          [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! LSHIFT          [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! LOR             [ reduce using rule 8 (expr -> expr AND expr .) ]
  ! LAND            [ reduce using rule 8 (expr -> expr AND expr .) ]


state 34

    (10) expr -> expr XOR expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 10 (expr -> expr XOR expr .)
    RPAREN          reduce using rule 10 (expr -> expr XOR expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! MINUS           [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! TIMES           [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! DIVIDE          [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! MODULO          [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! OR              [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! AND             [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! XOR             [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! RSHIFT          [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! LSHIFT          [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! LOR             [ reduce using rule 10 (expr -> expr XOR expr .) ]
  ! LAND            [ reduce using rule 10 (expr -> expr XOR expr .) ]


state 35

    (11) expr -> expr RSHIFT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 11 (expr -> expr RSHIFT expr .)
    RPAREN          reduce using rule 11 (expr -> expr RSHIFT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! MINUS           [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! TIMES           [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! DIVIDE          [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! MODULO          [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! OR              [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! AND             [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! XOR             [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! RSHIFT          [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! LSHIFT          [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! LOR             [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]
  ! LAND            [ reduce using rule 11 (expr -> expr RSHIFT expr .) ]


state 36

    (12) expr -> expr LSHIFT expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 12 (expr -> expr LSHIFT expr .)
    RPAREN          reduce using rule 12 (expr -> expr LSHIFT expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! MINUS           [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! TIMES           [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! DIVIDE          [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! MODULO          [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! OR              [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! AND             [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! XOR             [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! RSHIFT          [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! LSHIFT          [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! LOR             [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]
  ! LAND            [ reduce using rule 12 (expr -> expr LSHIFT expr .) ]


state 37

    (13) expr -> expr LOR expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 13 (expr -> expr LOR expr .)
    RPAREN          reduce using rule 13 (expr -> expr LOR expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! MINUS           [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! TIMES           [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! DIVIDE          [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! MODULO          [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! OR              [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! AND             [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! XOR             [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! RSHIFT          [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! LSHIFT          [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! LOR             [ reduce using rule 13 (expr -> expr LOR expr .) ]
  ! LAND            [ reduce using rule 13 (expr -> expr LOR expr .) ]


state 38

    (14) expr -> expr LAND expr .
    (1) expr -> expr . PLUS expr
    (2) expr -> expr . MINUS expr
    (4) expr -> expr . TIMES expr
    (5) expr -> expr . DIVIDE expr
    (6) expr -> expr . MODULO expr
    (7) expr -> expr . OR expr
    (8) expr -> expr . AND expr
    (10) expr -> expr . XOR expr
    (11) expr -> expr . RSHIFT expr
    (12) expr -> expr . LSHIFT expr
    (13) expr -> expr . LOR expr
    (14) expr -> expr . LAND expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
    $end            reduce using rule 14 (expr -> expr LAND expr .)
    RPAREN          reduce using rule 14 (expr -> expr LAND expr .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MODULO          shift and go to state 13
    OR              shift and go to state 14
    AND             shift and go to state 15
    XOR             shift and go to state 16
    RSHIFT          shift and go to state 17
    LSHIFT          shift and go to state 18
    LOR             shift and go to state 19
    LAND            shift and go to state 20

  ! PLUS            [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! MINUS           [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! TIMES           [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! DIVIDE          [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! MODULO          [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! OR              [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! AND             [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! XOR             [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! RSHIFT          [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! LSHIFT          [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! LOR             [ reduce using rule 14 (expr -> expr LAND expr .) ]
  ! LAND            [ reduce using rule 14 (expr -> expr LAND expr .) ]


state 39

    (19) expr -> LPAREN expr RPAREN .

    PLUS            reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    MODULO          reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    XOR             reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    RSHIFT          reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    LSHIFT          reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    LOR             reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    LAND            reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 19 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 19 (expr -> LPAREN expr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 22 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 22 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 22 resolved as shift
WARNING: shift/reduce conflict for OR in state 22 resolved as shift
WARNING: shift/reduce conflict for AND in state 22 resolved as shift
WARNING: shift/reduce conflict for XOR in state 22 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 22 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 22 resolved as shift
WARNING: shift/reduce conflict for LOR in state 22 resolved as shift
WARNING: shift/reduce conflict for LAND in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 23 resolved as shift
WARNING: shift/reduce conflict for OR in state 23 resolved as shift
WARNING: shift/reduce conflict for AND in state 23 resolved as shift
WARNING: shift/reduce conflict for XOR in state 23 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 23 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 23 resolved as shift
WARNING: shift/reduce conflict for LOR in state 23 resolved as shift
WARNING: shift/reduce conflict for LAND in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 24 resolved as shift
WARNING: shift/reduce conflict for OR in state 24 resolved as shift
WARNING: shift/reduce conflict for AND in state 24 resolved as shift
WARNING: shift/reduce conflict for XOR in state 24 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 24 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 24 resolved as shift
WARNING: shift/reduce conflict for LOR in state 24 resolved as shift
WARNING: shift/reduce conflict for LAND in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 25 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 25 resolved as shift
WARNING: shift/reduce conflict for OR in state 25 resolved as shift
WARNING: shift/reduce conflict for AND in state 25 resolved as shift
WARNING: shift/reduce conflict for XOR in state 25 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 25 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 25 resolved as shift
WARNING: shift/reduce conflict for LOR in state 25 resolved as shift
WARNING: shift/reduce conflict for LAND in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 31 resolved as shift
WARNING: shift/reduce conflict for OR in state 31 resolved as shift
WARNING: shift/reduce conflict for AND in state 31 resolved as shift
WARNING: shift/reduce conflict for XOR in state 31 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 31 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 31 resolved as shift
WARNING: shift/reduce conflict for LOR in state 31 resolved as shift
WARNING: shift/reduce conflict for LAND in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 32 resolved as shift
WARNING: shift/reduce conflict for OR in state 32 resolved as shift
WARNING: shift/reduce conflict for AND in state 32 resolved as shift
WARNING: shift/reduce conflict for XOR in state 32 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 32 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 32 resolved as shift
WARNING: shift/reduce conflict for LOR in state 32 resolved as shift
WARNING: shift/reduce conflict for LAND in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 33 resolved as shift
WARNING: shift/reduce conflict for OR in state 33 resolved as shift
WARNING: shift/reduce conflict for AND in state 33 resolved as shift
WARNING: shift/reduce conflict for XOR in state 33 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 33 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 33 resolved as shift
WARNING: shift/reduce conflict for LOR in state 33 resolved as shift
WARNING: shift/reduce conflict for LAND in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 34 resolved as shift
WARNING: shift/reduce conflict for OR in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for XOR in state 34 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 34 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 34 resolved as shift
WARNING: shift/reduce conflict for LOR in state 34 resolved as shift
WARNING: shift/reduce conflict for LAND in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 35 resolved as shift
WARNING: shift/reduce conflict for OR in state 35 resolved as shift
WARNING: shift/reduce conflict for AND in state 35 resolved as shift
WARNING: shift/reduce conflict for XOR in state 35 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 35 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 35 resolved as shift
WARNING: shift/reduce conflict for LOR in state 35 resolved as shift
WARNING: shift/reduce conflict for LAND in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 36 resolved as shift
WARNING: shift/reduce conflict for OR in state 36 resolved as shift
WARNING: shift/reduce conflict for AND in state 36 resolved as shift
WARNING: shift/reduce conflict for XOR in state 36 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 36 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 36 resolved as shift
WARNING: shift/reduce conflict for LOR in state 36 resolved as shift
WARNING: shift/reduce conflict for LAND in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 37 resolved as shift
WARNING: shift/reduce conflict for OR in state 37 resolved as shift
WARNING: shift/reduce conflict for AND in state 37 resolved as shift
WARNING: shift/reduce conflict for XOR in state 37 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 37 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 37 resolved as shift
WARNING: shift/reduce conflict for LOR in state 37 resolved as shift
WARNING: shift/reduce conflict for LAND in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 38 resolved as shift
WARNING: shift/reduce conflict for OR in state 38 resolved as shift
WARNING: shift/reduce conflict for AND in state 38 resolved as shift
WARNING: shift/reduce conflict for XOR in state 38 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 38 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 38 resolved as shift
WARNING: shift/reduce conflict for LOR in state 38 resolved as shift
WARNING: shift/reduce conflict for LAND in state 38 resolved as shift
